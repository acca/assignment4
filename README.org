#+TITLE: Accessing a DB though an EJB layer
#+AUTHOR: Daniele Santoro
#+DATE: 18/10/2015

* Introduction
  Code and documentation are present at this link: https://github.com/acca/assignment3. 

  This application is in the domain of the web application that needs to retrieve features or functionality from a remote service. Indeed the application is composed by both *client* and *server* tiers.
  
  A simplified mapping into the real world of this application can be the follow:

  /A user sell or buy stocks to/from an online market (it could be the stock market). While the user performs operations the prices of the goods changes in time because of other users interaction with the market. The prices of the stocks are then computed by a centralized server where all the suers perform business operations./

  Following the above abstraction I've deployed:
  - *The client side*: A Standard Java application (SE) which manages the interaction with the user, while at the same time make use of services offered by the server tier to perform particular computations on the data passed to it.
  - *The server side*: An Enterprise Java application (EE) which return to the user the current price of a stock given the nominal price.

* Implementation
  The following components are the most important:

  - *TradeRemote.java*: This interface describes the behavior of the Trade.java EJB. This is important both in the client and in the server to let the framework generate automatically all the relevant classes responsible for the communication.
  - *Trade.java*: This class implements the above remote interface. This is a basically a stateless Java Bean which returns the current vaulue of a stock. It is called each time the current price for a stock is needed. It is present on the server, in particular deployed on a JBoss server instance on my computer.
  - *Derby DB*: An instance of Derby DB has been configured and installed in my computer in order to store persistent data.
  - *JBoss*: An instance of JBoss (WildFly) including not only the EE framework used by the server to expose the EJB but also a JNDI layer to let the client browse and find the relative service offered by the EJB.
  - *User.java*: Is the entity class which let me store data on the database automatically through Hibernate tool, using O.R.M. technology.
  - *Client.java*: Is the main class

  The following features are the most important:

  - *Sell/Buy*: As requested the user can buy or sell stocks from the client application. The client ask for the price of each stock to the server (10 independent requests) to get the current price and calculate the total price for the business operation.
  - *List all transactions*: This is an *additional feature* which prints all the business transactions a used has performed on the market. This information is stored on the DB persistent layer.
  - *Maven build support*: I've first started developing without an automation tool and therefore including all the library by hand. The work started to be very complex in particular on the right choice of all the libraries needed. For these reason and also to allow a user to test quickly the application I've decided to deploy a Maven based project.

* Deployment
  In the assignment are present two Netbeans project: /a3Client/ and /a3Server/.
** Requirements
   1) A JBoss AS must run and accept JNDI (http-remoting) connections on =127.0.0.1:8080=
   2) A JBoss username (in the ApplicationRealm) with following credentials must be setup:
      #+BEGIN_EXAMPLE
      Username: user
      Password: pw
      #+END_EXAMPLE
   3) A Derby DB must run and accept connection on =localhost:1527=
   4) This is not required but having the JBoss log open on another shell can be useful:
      #+BEGIN_EXAMPLE
      cd $JBOSS_HOME/standalone/log
      tail -f server.log
      #+END_EXAMPLE
** Deploy & Run
   It is possible to run the application from inside Netbeans but the Maven plugin must be installed, otherwise follow these steps:
   1) Download the repository using git:
      #+BEGIN_EXAMPLE
      git clone https://github.com/acca/assignment3.git
      #+END_EXAMPLE
   2) Move into the project main folder
      #+BEGIN_EXAMPLE
      cd assignment3
      #+END_EXAMPLE
   3) Build the EE application
      #+BEGIN_EXAMPLE
      mvn install -f a3Server/
      #+END_EXAMPLE
      Both a3Server-ejb and a3Server-ear should be deployed. If not run the command for each one:
      #+BEGIN_EXAMPLE
      mvn install -f a3Server/a3Server-ejb
      mvn install -f a3Server/a3Server-ear
      #+END_EXAMPLE
   4) Move the generated =a3Server-ear-1.0-SNAPSHOT.ear.= file into the JBoss deployment folder
      #+BEGIN_EXAMPLE
      cp a3Server/a3Server-ear/target/a3Server-ear-1.0-SNAPSHOT.ear $JBOSS_HOME/standalone/deployments/
      #+END_EXAMPLE
      In the JBoss log you should see messages saying the application has been successfully deployed.
   5) Build and run the SE application
      #+BEGIN_EXAMPLE
      mvn exec:java -f a3Client/
      #+END_EXAMPLE
   6) Follow on-screen instructions and see the JBoss log

** Screen-shots
   1) Application output
      #+BEGIN_EXAMPLE
      --> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
l
      List of all the oepration for user: 1
      Operation ID: 1 - Stocks: 50 - Money: 1000.0
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
b
      User choose to buy. Default stocks amount is 10
      User status -> Id: 1 - Money: 900.1 - Stocks: 60 - Last operation id: 2
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
b
      User choose to buy. Default stocks amount is 10
      User status -> Id: 1 - Money: 800.19995 - Stocks: 70 - Last operation id: 3
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
b
      User choose to buy. Default stocks amount is 10
      User status -> Id: 1 - Money: 701.39996 - Stocks: 80 - Last operation id: 4
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
b
      User choose to buy. Default stocks amount is 10
      User status -> Id: 1 - Money: 602.0 - Stocks: 90 - Last operation id: 5
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
b
      User choose to buy. Default stocks amount is 10
      User status -> Id: 1 - Money: 502.1 - Stocks: 100 - Last operation id: 6
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
b
      User choose to buy. Default stocks amount is 10
      User status -> Id: 1 - Money: 402.3 - Stocks: 110 - Last operation id: 7
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
s
      User choose to sell. Default stocks amount is 10
      User status -> Id: 1 - Money: 500.99997 - Stocks: 100 - Last operation id: 8
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
s
      User choose to sell. Default stocks amount is 10
      User status -> Id: 1 - Money: 600.19995 - Stocks: 90 - Last operation id: 9
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
s
      User choose to sell. Default stocks amount is 10
      User status -> Id: 1 - Money: 698.7999 - Stocks: 80 - Last operation id: 10
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
s
      User choose to sell. Default stocks amount is 10
      User status -> Id: 1 - Money: 799.69995 - Stocks: 70 - Last operation id: 11
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 

l
      List of all the oepration for user: 1
      Operation ID: 1 - Stocks: 50 - Money: 1000.0
      Operation ID: 2 - Stocks: 60 - Money: 900.1
      Operation ID: 3 - Stocks: 70 - Money: 800.19995
      Operation ID: 4 - Stocks: 80 - Money: 701.39996
      Operation ID: 5 - Stocks: 90 - Money: 602.0
      Operation ID: 6 - Stocks: 100 - Money: 502.1
      Operation ID: 7 - Stocks: 110 - Money: 402.3
      Operation ID: 8 - Stocks: 100 - Money: 500.99997
      Operation ID: 9 - Stocks: 90 - Money: 600.19995
      Operation ID: 10 - Stocks: 80 - Money: 698.7999
      Operation ID: 11 - Stocks: 70 - Money: 799.69995
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
q
Quitting. Hope you had good business !!!
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 30.047 s
[INFO] Finished at: 2015-10-18T21:00:02+02:00
[INFO] Final Memory: 19M/309M
[INFO] ------------------------------------------------------------------------
      #+END_EXAMPLE
   2) Application output showing DB queries
      #+BEGIN_EXAMPLE
      acca@sirio assignment3 $ mvn exec:java -f a3Client/pom.xml 
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building a3Client 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] >>> exec-maven-plugin:1.2.1:java (default-cli) > validate @ a3Client >>>
[INFO] 
[INFO] <<< exec-maven-plugin:1.2.1:java (default-cli) < validate @ a3Client <<<
[INFO] 
[INFO] --- exec-maven-plugin:1.2.1:java (default-cli) @ a3Client ---
Oct 18, 2015 8:38:01 PM org.xnio.Xnio <clinit>
INFO: XNIO version 3.2.0.Final
Oct 18, 2015 8:38:01 PM org.xnio.nio.NioXnio <clinit>
INFO: XNIO NIO Implementation Version 3.2.0.Final
Oct 18, 2015 8:38:01 PM org.jboss.remoting3.EndpointImpl <clinit>
INFO: JBoss Remoting version 4.0.0.Final
Oct 18, 2015 8:38:01 PM org.jboss.ejb.client.remoting.VersionReceiver handleMessage
INFO: EJBCLIENT000017: Received server version 2 and marshalling strategies [river]
Oct 18, 2015 8:38:01 PM org.jboss.ejb.client.remoting.RemotingConnectionEJBReceiver associate
INFO: EJBCLIENT000013: Successful version handshake completed for receiver context EJBReceiverContext{clientContext=org.jboss.ejb.client.EJBClientContext@12bdeac1, receiver=Remoting connection EJB receiver [connection=Remoting connection <4207a4d8>,channel=jboss.ejb,nodename=sirio]} on channel Channel ID ad3ba15c (outbound) of Remoting connection 23c23a06 to localhost/127.0.0.1:8080
Oct 18, 2015 8:38:01 PM org.jboss.ejb.client.EJBClient <clinit>
INFO: JBoss EJB Client version 2.0.0.Final
Oct 18, 2015 8:38:02 PM org.hibernate.annotations.common.reflection.java.JavaReflectionManager <clinit>
INFO: HCANN000001: Hibernate Commons Annotations {4.0.4.Final}
Oct 18, 2015 8:38:02 PM org.hibernate.Version logVersion
INFO: HHH000412: Hibernate Core {4.0.1.Final}
Oct 18, 2015 8:38:02 PM org.hibernate.cfg.Environment <clinit>
INFO: HHH000206: hibernate.properties not found
Oct 18, 2015 8:38:02 PM org.hibernate.cfg.Environment buildBytecodeProvider
INFO: HHH000021: Bytecode provider name : javassist
Oct 18, 2015 8:38:02 PM org.hibernate.cfg.Configuration configure
INFO: HHH000043: Configuring from resource: /hibernate.cfg.xml
Oct 18, 2015 8:38:02 PM org.hibernate.cfg.Configuration getConfigurationInputStream
INFO: HHH000040: Configuration resource: /hibernate.cfg.xml
Oct 18, 2015 8:38:02 PM org.hibernate.cfg.Configuration addResource
INFO: HHH000221: Reading mappings from resource: User.hbm.xml
Oct 18, 2015 8:38:03 PM org.hibernate.cfg.Configuration doConfigure
INFO: HHH000041: Configured SessionFactory: null
Oct 18, 2015 8:38:03 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000402: Using Hibernate built-in connection pool (not for production use!)
Oct 18, 2015 8:38:03 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000115: Hibernate connection pool size: 20
Oct 18, 2015 8:38:03 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000006: Autocommit mode: false
Oct 18, 2015 8:38:03 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000401: using driver [org.apache.derby.jdbc.ClientDriver] at URL [jdbc:derby://localhost:1527/a3clientdb;create=true]
Oct 18, 2015 8:38:03 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000046: Connection properties: {}
Oct 18, 2015 8:38:03 PM org.hibernate.dialect.Dialect <init>
INFO: HHH000400: Using dialect: org.hibernate.dialect.DerbyDialect
Oct 18, 2015 8:38:03 PM org.hibernate.dialect.DerbyDialect <init>
WARN: HHH000430: The DerbyDialect dialect has been deprecated; use one of the version-specific dialects instead
Oct 18, 2015 8:38:03 PM org.hibernate.engine.transaction.internal.TransactionFactoryInitiator initiateService
INFO: HHH000399: Using default transaction strategy (direct JDBC transactions)
Oct 18, 2015 8:38:03 PM org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory <init>
INFO: HHH000397: Using ASTQueryTranslatorFactory
Oct 18, 2015 8:38:03 PM org.hibernate.tool.hbm2ddl.SchemaExport execute
INFO: HHH000227: Running hbm2ddl schema export
Hibernate: drop table USERS
Hibernate: create table USERS (USER_IDOP bigint not null, USER_MONEY float, USER_STOCKS integer, USER_ID bigint, primary key (USER_IDOP))
Oct 18, 2015 8:38:03 PM org.hibernate.tool.hbm2ddl.SchemaExport execute
INFO: HHH000230: Schema export complete
Hibernate: select max(USER_IDOP) from USERS
Hibernate: select user0_.USER_IDOP as USER1_0_, user0_.USER_MONEY as USER2_0_, user0_.USER_STOCKS as USER3_0_, user0_.USER_ID as USER4_0_ from USERS user0_ where user0_.USER_ID=1
Hibernate: insert into USERS (USER_MONEY, USER_STOCKS, USER_ID, USER_IDOP) values (?, ?, ?, ?)
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
s
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
      User choose to sell. Default stocks amount is 10
Hibernate: select user0_.USER_IDOP as USER1_0_, user0_.USER_MONEY as USER2_0_, user0_.USER_STOCKS as USER3_0_, user0_.USER_ID as USER4_0_ from USERS user0_ where user0_.USER_ID=1
Hibernate: insert into USERS (USER_MONEY, USER_STOCKS, USER_ID, USER_IDOP) values (?, ?, ?, ?)
      it.unitn.dsantoro.a3client.User[ id=1 ]money: 1101.2 stocks: 40
s
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
      User choose to sell. Default stocks amount is 10
Hibernate: select user0_.USER_IDOP as USER1_0_, user0_.USER_MONEY as USER2_0_, user0_.USER_STOCKS as USER3_0_, user0_.USER_ID as USER4_0_ from USERS user0_ where user0_.USER_ID=1
Hibernate: insert into USERS (USER_MONEY, USER_STOCKS, USER_ID, USER_IDOP) values (?, ?, ?, ?)
      it.unitn.dsantoro.a3client.User[ id=1 ]money: 1203.0 stocks: 30
b
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
      User choose to buy. Default stocks amount is 10
Hibernate: select user0_.USER_IDOP as USER1_0_, user0_.USER_MONEY as USER2_0_, user0_.USER_STOCKS as USER3_0_, user0_.USER_ID as USER4_0_ from USERS user0_ where user0_.USER_ID=1
Hibernate: insert into USERS (USER_MONEY, USER_STOCKS, USER_ID, USER_IDOP) values (?, ?, ?, ?)
      it.unitn.dsantoro.a3client.User[ id=1 ]money: 1102.2 stocks: 40
b
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
      User choose to buy. Default stocks amount is 10
Hibernate: select user0_.USER_IDOP as USER1_0_, user0_.USER_MONEY as USER2_0_, user0_.USER_STOCKS as USER3_0_, user0_.USER_ID as USER4_0_ from USERS user0_ where user0_.USER_ID=1
Hibernate: insert into USERS (USER_MONEY, USER_STOCKS, USER_ID, USER_IDOP) values (?, ?, ?, ?)
      it.unitn.dsantoro.a3client.User[ id=1 ]money: 1002.39996 stocks: 50
l
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
      List of all the oepration for user: 1
Hibernate: select user0_.USER_IDOP as USER1_0_, user0_.USER_MONEY as USER2_0_, user0_.USER_STOCKS as USER3_0_, user0_.USER_ID as USER4_0_ from USERS user0_ where user0_.USER_ID=1
      Operation ID: 1 - Stocks: 50 - Money: 1000.0
      Operation ID: 2 - Stocks: 40 - Money: 1101.2
      Operation ID: 3 - Stocks: 30 - Money: 1203.0
      Operation ID: 4 - Stocks: 40 - Money: 1102.2
      Operation ID: 5 - Stocks: 50 - Money: 1002.39996
q
--> Please tell me if you want to [S]ell, [B]uy, [L]ist transactions or [Q]uit: 
Quitting. Hope you had good business !!!
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 01:03 min
[INFO] Finished at: 2015-10-18T20:39:04+02:00
[INFO] Final Memory: 12M/203M
[INFO] ------------------------------------------------------------------------
Oct 18, 2015 8:39:04 PM org.jboss.naming.remote.protocol.v1.RemoteNamingStoreV1$MessageReceiver handleEnd
      #+END_EXAMPLE
   3) JBoss AS log file
      #+BEGIN_EXAMPLE
....
2015-10-18 15:28:35,606 INFO  [org.jboss.weld.deployer] (MSC service thread 1-3) WFLYWELD0003: Processing weld deployment a3Server-ejb-1.0-SNAPSHOT.jar
2015-10-18 15:28:35,607 INFO  [org.jboss.as.ejb3.deployment.processors.EjbJndiBindingsDeploymentUnitProcessor] (MSC service thread 1-3) JNDI bindings for session bean named Trade in deployment unit subdeployment "a3Server-ejb-1.0-SNAPSHOT.jar" of deployment "a3Server-ear-1.0-SNAPSHOT.ear" are as follows:

      java:global/a3Server-ear-1.0-SNAPSHOT/a3Server-ejb-1.0-SNAPSHOT/Trade!it.unitn.dsantoro.a3server.TradeRemote
      java:app/a3Server-ejb-1.0-SNAPSHOT/Trade!it.unitn.dsantoro.a3server.TradeRemote
      java:module/Trade!it.unitn.dsantoro.a3server.TradeRemote
      java:jboss/exported/a3Server-ear-1.0-SNAPSHOT/a3Server-ejb-1.0-SNAPSHOT/Trade!it.unitn.dsantoro.a3server.TradeRemote
      java:global/a3Server-ear-1.0-SNAPSHOT/a3Server-ejb-1.0-SNAPSHOT/Trade
      java:app/a3Server-ejb-1.0-SNAPSHOT/Trade
      java:module/Trade

2015-10-18 15:28:35,608 INFO  [org.jboss.weld.deployer] (MSC service thread 1-8) WFLYWELD0006: Starting Services for CDI deployment: a3Server-ear-1.0-SNAPSHOT.ear
2015-10-18 15:28:35,609 INFO  [org.jboss.weld.deployer] (MSC service thread 1-1) WFLYWELD0009: Starting weld service for deployment a3Server-ear-1.0-SNAPSHOT.ear
2015-10-18 15:28:35,701 INFO  [org.jboss.as.server] (DeploymentScanner-threads - 2) WFLYSRV0016: Replaced deployment "a3Server-ear-1.0-SNAPSHOT.ear" with deployment "a3Server-ear-1.0-SNAPSHOT.ear"
....
2015-10-18 20:59:49,067 INFO  [stdout] (EJB default - 1) --- Converting stock nominalValue to currentValue ---
2015-10-18 20:59:49,067 INFO  [stdout] (EJB default - 1) Stock nominal value: 10.0
2015-10-18 20:59:49,067 INFO  [stdout] (EJB default - 1) Percentage applied: 1.0073289
2015-10-18 20:59:49,067 INFO  [stdout] (EJB default - 1) Stock current value: 10.0
2015-10-18 20:59:49,068 INFO  [stdout] (EJB default - 2) --- Converting stock nominalValue to currentValue ---
2015-10-18 20:59:49,068 INFO  [stdout] (EJB default - 2) Stock nominal value: 10.0
2015-10-18 20:59:49,069 INFO  [stdout] (EJB default - 2) Percentage applied: 0.98975426
2015-10-18 20:59:49,069 INFO  [stdout] (EJB default - 2) Stock current value: 9.8
2015-10-18 20:59:49,731 INFO  [stdout] (EJB default - 3) --- Converting stock nominalValue to currentValue ---
2015-10-18 20:59:49,731 INFO  [stdout] (EJB default - 3) Stock nominal value: 10.0
2015-10-18 20:59:49,731 INFO  [stdout] (EJB default - 3) Percentage applied: 1.0113412
2015-10-18 20:59:49,731 INFO  [stdout] (EJB default - 3) Stock current value: 10.1
2015-10-18 20:59:49,732 INFO  [stdout] (EJB default - 4) --- Converting stock nominalValue to currentValue ---
2015-10-18 20:59:49,732 INFO  [stdout] (EJB default - 4) Stock nominal value: 10.0
2015-10-18 20:59:49,732 INFO  [stdout] (EJB default - 4) Percentage applied: 0.9807118
2015-10-18 20:59:49,732 INFO  [stdout] (EJB default - 4) Stock current value: 9.8
2015-10-18 20:59:49,734 INFO  [stdout] (EJB default - 5) --- Converting stock nominalValue to currentValue ---
2015-10-18 20:59:49,734 INFO  [stdout] (EJB default - 5) Stock nominal value: 10.0
2015-10-18 20:59:49,734 INFO  [stdout] (EJB default - 5) Percentage applied: 1.0232465
2015-10-18 20:59:49,734 INFO  [stdout] (EJB default - 5) Stock current value: 10.2
2015-10-18 20:59:49,735 INFO  [stdout] (EJB default - 6) --- Converting stock nominalValue to currentValue ---
2015-10-18 20:59:49,735 INFO  [stdout] (EJB default - 6) Stock nominal value: 10.0
2015-10-18 20:59:49,735 INFO  [stdout] (EJB default - 6) Percentage applied: 1.0339323
2015-10-18 20:59:49,735 INFO  [stdout] (EJB default - 6) Stock current value: 10.3
2015-10-18 20:59:49,736 INFO  [stdout] (EJB default - 7) --- Converting stock nominalValue to currentValue ---
2015-10-18 20:59:49,736 INFO  [stdout] (EJB default - 7) Stock nominal value: 10.0
2015-10-18 20:59:49,736 INFO  [stdout] (EJB default - 7) Percentage applied: 1.0370677
2015-10-18 20:59:49,736 INFO  [stdout] (EJB default - 7) Stock current value: 10.3
2015-10-18 20:59:49,737 INFO  [stdout] (EJB default - 8) --- Converting stock nominalValue to currentValue ---
2015-10-18 20:59:49,737 INFO  [stdout] (EJB default - 8) Stock nominal value: 10.0
2015-10-18 20:59:49,737 INFO  [stdout] (EJB default - 8) Percentage applied: 1.0367454
2015-10-18 20:59:49,737 INFO  [stdout] (EJB default - 8) Stock current value: 10.3
2015-10-18 20:59:49,738 INFO  [stdout] (EJB default - 9) --- Converting stock nominalValue to currentValue ---
2015-10-18 20:59:49,738 INFO  [stdout] (EJB default - 9) Stock nominal value: 10.0
2015-10-18 20:59:49,738 INFO  [stdout] (EJB default - 9) Percentage applied: 0.96721834
2015-10-18 20:59:49,738 INFO  [stdout] (EJB default - 9) Stock current value: 9.6
2015-10-18 20:59:49,739 INFO  [stdout] (EJB default - 10) --- Converting stock nominalValue to currentValue ---
2015-10-18 20:59:49,739 INFO  [stdout] (EJB default - 10) Stock nominal value: 10.0
2015-10-18 20:59:49,739 INFO  [stdout] (EJB default - 10) Percentage applied: 1.0393243
2015-10-18 20:59:49,739 INFO  [stdout] (EJB default - 10) Stock current value: 10.3
2015-10-18 20:59:49,740 INFO  [stdout] (EJB default - 1) --- Converting stock nominalValue to currentValue ---
2015-10-18 20:59:49,740 INFO  [stdout] (EJB default - 1) Stock nominal value: 10.0
2015-10-18 20:59:49,740 INFO  [stdout] (EJB default - 1) Percentage applied: 0.9981717
2015-10-18 20:59:49,740 INFO  [stdout] (EJB default - 1) Stock current value: 9.9
2015-10-18 20:59:49,743 INFO  [stdout] (EJB default - 2) --- Converting stock nominalValue to currentValue ---
2015-10-18 20:59:49,743 INFO  [stdout] (EJB default - 2) Stock nominal value: 10.0
2015-10-18 20:59:49,743 INFO  [stdout] (EJB default - 2) Percentage applied: 1.0155833
2015-10-18 20:59:49,743 INFO  [stdout] (EJB default - 2) Stock current value: 10.1
      #+END_EXAMPLE
* Comments and notes
  Building this application takes a considerable time in order to setup and develop all the components. In particular most of the effort can be attributed to the deployment and configuration of the external boxes like: Derby database, JBoss AS, JNDI naming configuration and finding the right libraries to use in respect to the current version of framework involved.
  I've encountered many issues, which have been solved browsing the web and looking for solutions. Some of them are summarized in the below section.
** Issues
  1) *Setting and connecting to JNDI using properties*

     For WildFly 9.0.1 the URL provided in the slides was not working, I've solved after many tests using =http-remoting://127.0.0.1:8080=. Seems that WildFly does not listen on default port 1099 and 4447, since also =telnet 127.0.0.1 TESTED_PORT= was unreachable.
     Also other properties int the below references was needed to perform the connection.

     Resources:
     - http://stackoverflow.com/questions/24452075/wildfly-remote-ejb-invocation
     - https://docs.jboss.org/author/display/AS72/EJB+invocations+from+a+remote+server+instance 
  2) WildFly Application Server - plugin does not stop the JBoss server

     Resources:
     - http://stackoverflow.com/questions/30768143/wildfly-9-0-0-and-netbeans-8-0-2
     - https://community.jboss.org/wiki/WildFly8SetupInNetBeans80RC1OnWindows
  3) *=javaee-api.jar= from NetBeans libraries not working*

     Error:
     #+BEGIN_EXAMPLE
     Exception in thread "main" java.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file javax/transaction/SystemException...
     #+END_EXAMPLE
     I've solved using the maven dependency.
     Resources:
     - http://stackoverflow.com/questions/15386950/classformaterror-absent-code-attribute-in-method-that-is-not-native-or-abstract
  4) *Again JNDI properties settings issue*

     Error:
     #+BEGIN_EXAMPLE
     Exception in thread "main" java.lang.IllegalStateException: EJBCLIENT000025: No EJB receiver available for handling [appName:a3Server, moduleName:a3Server-ejb, distinctName:] combination for invocation context org.jboss.ejb.client.EJBClientInvocationContext@527740a2
     #+END_EXAMPLE
     Resources:
     - https://developer.jboss.org/thread/199457
     - Same link in 1)
  5) *Missing library*

     Error:
     #+BEGIN_EXAMPLE
     Exception in thread "main" javax.naming.NoInitialContextException: Cannot instantiate class: org.jboss.naming.remote.client.InitialContextFactory [Root exception is java.lang.ClassNotFoundException: org.jboss.naming.remote.client.InitialContextFactory]
     #+END_EXAMPLE

     Solved using this Maven dependency:
     #+BEGIN_EXAMPLE
     <dependency>
     <groupId>org.wildfly</groupId>
     <artifactId>wildfly-ejb-client-bom</artifactId>
     <version>8.0.0.Final</version>
     <type>pom</type>
     </dependency>
     #+END_EXAMPLE     
     Resources:
     - https://docs.jboss.org/author/display/WFLY8/Remote+JNDI+Reference+Update+Draft
  6) *Repeated deployment during development*

  I've found very annoying the continuous copy of the .ear package on the Application Server while developing to test it. Maybe the IDE can be configured to automatize this process but I didn't look deeper into this.
  
